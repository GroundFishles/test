name: Custom Build WSA
on:
 workflow_dispatch:
  inputs:
   arch:
    type: choice
    description: "Architecture WSA:"
    required: true
    options: [x64, ARM64]
    default: x64
   release_type:
    type: choice
    description: "WSA Release Channel:"
    required: true
    options: [Retail, Release Preview, Beta, Dev]
    default: Release Preview
   gapps_brand:
    type: choice
    description: "GApps brand. ”None” - without GApps:"
    required: true
    options: [None, MindTheGapps]
    default: MindTheGapps
   magisk_ver:
    type: choice
    description: "Magisk version. ”None” - without Magisk:"
    required: true
    options: [None, Stable, Beta, Canary, Debug]
    default: Stable
   remove_amazon:
    description: "Remove Amazon AppStore"
    required: true
    default: true
    type: boolean
jobs:
  Build-WSA:
    name: Build WSA
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update;sudo apt-get install -y setools lzip wine patchelf e2fsprogs python3-pip aria2 p7zip-full attr xz-utils unzip cabextract
          aria2c -d /usr/local/bin/ https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
          sudo chmod +x /usr/local/bin/winetricks
          python3 -m pip install requests
          winetricks msxml6
      - uses: actions/checkout@v3
        with:
          repository: LSPosed/MagiskOnWSALocal
          path: MagiskOnWSALocal
      - name: Build WSA
        id: build_wsa
        working-directory: MagiskOnWSALocal/scripts
        run: |
          declare -A opts=( ["ARCH,x64"]="x64" ["ARCH,ARM64"]="arm64" ["RELEASE_TYPE,Retail"]="retail" ["RELEASE_TYPE,Release Preview"]="RP" ["RELEASE_TYPE,Beta"]="WIS" ["RELEASE_TYPE,Dev"]="WIF" ["MAGISK_VER,Stable"]="stable" ["MAGISK_VER,Beta"]="beta" ["MAGISK_VER,Canary"]="canary" ["MAGISK_VER,Debug"]="debug" ["GAPPS_BRAND,MindTheGapps"]="MindTheGapps" ["GAPPS_BRAND,None"]="none" ["REMOVE_AMAZON,true"]="--remove-amazon" )
          if [[ "${{ inputs.magisk_ver }}" != "None" ]]; then
              ROOT_SOL="magisk"
              MAGISK_VER="${opts[MAGISK_VER,${{ inputs.magisk_ver }}]}"
          else
              ROOT_SOL="none"
              MAGISK_VER="stable"
          fi
              echo "arch=${opts[ARCH,${{ inputs.arch }}]}" >> $GITHUB_OUTPUT

          ./build.sh \
          --arch ${opts[ARCH,${{ inputs.arch }}]} \
          --release-type ${opts[RELEASE_TYPE,${{ inputs.release_type }}]} \
          ${opts[REMOVE_AMAZON,${{ inputs.remove_amazon }}]} \
          --magisk-ver $MAGISK_VER \
          --gapps-brand ${opts[GAPPS_BRAND,${{ inputs.gapps_brand }}]} \
          --root-sol $ROOT_SOL
      - name: Archiving and compressing artifact
        working-directory: MagiskOnWSALocal/output
        run: |
          7z a -tzip -mx=4 -mmt=52 -saa *
      - name: Get WSA version tag
        shell: bash
        run: |
          regex="WSA_(.*)_${{ steps.build_wsa.outputs.arch }}"
          if [[ $(ls ./MagiskOnWSALocal/output/*.zip) =~ $regex ]]; then
            echo "wsaver=${BASH_REMATCH[1]}" >> $GITHUB_ENV
          else
            echo "wsaver=WSA" >> $GITHUB_ENV
          fi
      - name: Upload a Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: MagiskOnWSALocal/output/*
          tag_name: WSA-${{ env.wsaver }}
          name: WSA ${{ env.wsaver }}
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 1
